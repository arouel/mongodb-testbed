apply plugin: 'eclipse'
apply plugin: 'net.ltgt.apt-eclipse'

// apt setup
eclipse {
    jdt {
        apt {
            // whether annotation processing is enabled in Eclipse
            aptEnabled = compileJava.aptOptions.annotationProcessing
            // where Eclipse will output the generated sources; value is interpreted as per project.file()
            genSrcDir = file('.apt_generated')
            // whether annotation processing is enabled in the editor
            reconcileEnabled = true
            // a map of annotation processor options; a null value will pass the argument as -Akey rather than -Akey=value
            processorOptions = compileJava.aptOptions.processorArgs
        }
        file.withProperties {
            it['org.eclipse.jdt.core.formatter.lineSplit'] = '200'
            it['org.eclipse.jdt.core.formatter.comment.line_length'] = '180'
            it['org.eclipse.jdt.core.formatter.tabulation.char'] = 'space'
            it['org.eclipse.jdt.core.formatter.tabulation.size'] = '4'
            it['org.eclipse.jdt.core.formatter.join_wrapped_lines'] = 'false'
            it['org.eclipse.jdt.core.compiler.doc.comment.support'] = 'enabled'
            it['org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation'] = 'warning'
            it['org.eclipse.jdt.core.compiler.problem.missingJavadocTags'] = 'warning'
            it['org.eclipse.jdt.core.compiler.problem.parameterAssignment'] = 'ignore'
            it['org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation'] = 'ignore'
            it['org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess'] = 'ignore'
        }
    }

    factorypath {
        plusConfigurations = [configurations.annotationProcessor, configurations.testAnnotationProcessor]
    }
}

// customize generation of .classpath files
eclipse {
    classpath {
        defaultOutputDir = file('build/classes-main-ide')
    }
}

// copy Eclipse JDT code formatting settings
task eclipseJdtPrepare(type: Copy) {
    from rootProject.file('src/build/eclipse')
    into project.file('.settings/')
    include '*.prefs'
}
tasks["eclipseJdt"].dependsOn(eclipseJdtPrepare)
